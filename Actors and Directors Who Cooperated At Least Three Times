1050. Actors and Directors Who Cooperated At Least Three Times (https://leetcode.com/problems/actors-and-directors-who-cooperated-at-least-three-times/?envType=list&envId=e97a9e5m)

Table: ActorDirector

+-------------+---------+
| Column Name | Type    |
+-------------+---------+
| actor_id    | int     |
| director_id | int     |
| timestamp   | int     |
+-------------+---------+
timestamp is the primary key column for this table.
 

Find all the pairs (actor_id, director_id) where the actor has cooperated with the director at least three times.

Return the result table in any order.

The result format is in the following example.

 

Example 1:

Input: 
ActorDirector table:
+-------------+-------------+-------------+
| actor_id    | director_id | timestamp   |
+-------------+-------------+-------------+
| 1           | 1           | 0           |
| 1           | 1           | 1           |
| 1           | 1           | 2           |
| 1           | 2           | 3           |
| 1           | 2           | 4           |
| 2           | 1           | 5           |
| 2           | 1           | 6           |
+-------------+-------------+-------------+
Output: 
+-------------+-------------+
| actor_id    | director_id |
+-------------+-------------+
| 1           | 1           |
+-------------+-------------+
Explanation: The only pair is (1, 1) where they cooperated exactly 3 times.


Summary :

1. We have a table called "ActorDirector" that represents the cooperation between actors and directors. The table has three columns: "actor_id," "director_id," and "timestamp." Each row represents a cooperation event, indicating the actor ID, director ID, and the timestamp of the cooperation.

2. The goal is to find all the pairs of (actor_id, director_id) where the actor and director have cooperated at least three times. We are interested in identifying pairs that have a significant collaboration history.

3. To solve the problem, we need to analyze the data in the "ActorDirector" table. We examine the actor and director IDs to identify pairs that meet the cooperation threshold of at least three times.

4. The expected output is a result table that contains the actor_id and director_id of the pairs that have cooperated at least three times. The order of the pairs in the result table does not matter.


Solutions :

1.

SELECT ad.actor_id, ad.director_id
FROM ActorDirector ad
JOIN (
  SELECT actor_id, director_id
  FROM ActorDirector
  GROUP BY actor_id, director_id
  HAVING COUNT(*) >= 3
) ad2 ON ad.actor_id = ad2.actor_id AND ad.director_id = ad2.director_id
GROUP BY ad.actor_id, ad.director_id

2.  Using timestamp

SELECT actor_id, director_id FROM ActorDirector 
GROUP BY actor_id, director_id HAVING COUNT(TIMESTAMP) >= 3;
