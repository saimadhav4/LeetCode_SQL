262. Trips and Users (https://leetcode.com/problems/trips-and-users/?envType=list&envId=e97a9e5m)


Table: Trips

+-------------+----------+
| Column Name | Type     |
+-------------+----------+
| id          | int      |
| client_id   | int      |
| driver_id   | int      |
| city_id     | int      |
| status      | enum     |
| request_at  | date     |     
+-------------+----------+
id is the primary key for this table.
The table holds all taxi trips. Each trip has a unique id, while client_id and driver_id are foreign keys to the users_id at the Users table.
Status is an ENUM type of ('completed', 'cancelled_by_driver', 'cancelled_by_client').
 

Table: Users

+-------------+----------+
| Column Name | Type     |
+-------------+----------+
| users_id    | int      |
| banned      | enum     |
| role        | enum     |
+-------------+----------+
users_id is the primary key for this table.
The table holds all users. Each user has a unique users_id, and role is an ENUM type of ('client', 'driver', 'partner').
banned is an ENUM type of ('Yes', 'No').
 

The cancellation rate is computed by dividing the number of canceled (by client or driver) requests with unbanned users by the total number of requests with unbanned users on that day.

Write a SQL query to find the cancellation rate of requests with unbanned users (both client and driver must not be banned) each day between "2013-10-01" and "2013-10-03". Round Cancellation Rate to two decimal points.

Return the result table in any order.

The query result format is in the following example.

 

Example 1:

Input: 
Trips table:
+----+-----------+-----------+---------+---------------------+------------+
| id | client_id | driver_id | city_id | status              | request_at |
+----+-----------+-----------+---------+---------------------+------------+
| 1  | 1         | 10        | 1       | completed           | 2013-10-01 |
| 2  | 2         | 11        | 1       | cancelled_by_driver | 2013-10-01 |
| 3  | 3         | 12        | 6       | completed           | 2013-10-01 |
| 4  | 4         | 13        | 6       | cancelled_by_client | 2013-10-01 |
| 5  | 1         | 10        | 1       | completed           | 2013-10-02 |
| 6  | 2         | 11        | 6       | completed           | 2013-10-02 |
| 7  | 3         | 12        | 6       | completed           | 2013-10-02 |
| 8  | 2         | 12        | 12      | completed           | 2013-10-03 |
| 9  | 3         | 10        | 12      | completed           | 2013-10-03 |
| 10 | 4         | 13        | 12      | cancelled_by_driver | 2013-10-03 |
+----+-----------+-----------+---------+---------------------+------------+
Users table:
+----------+--------+--------+
| users_id | banned | role   |
+----------+--------+--------+
| 1        | No     | client |
| 2        | Yes    | client |
| 3        | No     | client |
| 4        | No     | client |
| 10       | No     | driver |
| 11       | No     | driver |
| 12       | No     | driver |
| 13       | No     | driver |
+----------+--------+--------+
Output: 
+------------+-------------------+
| Day        | Cancellation Rate |
+------------+-------------------+
| 2013-10-01 | 0.33              |
| 2013-10-02 | 0.00              |
| 2013-10-03 | 0.50              |
+------------+-------------------+
Explanation: 
On 2013-10-01:
  - There were 4 requests in total, 2 of which were canceled.
  - However, the request with Id=2 was made by a banned client (User_Id=2), so it is ignored in the calculation.
  - Hence there are 3 unbanned requests in total, 1 of which was canceled.
  - The Cancellation Rate is (1 / 3) = 0.33
On 2013-10-02:
  - There were 3 requests in total, 0 of which were canceled.
  - The request with Id=6 was made by a banned client, so it is ignored.
  - Hence there are 2 unbanned requests in total, 0 of which were canceled.
  - The Cancellation Rate is (0 / 2) = 0.00
On 2013-10-03:
  - There were 3 requests in total, 1 of which was canceled.
  - The request with Id=8 was made by a banned client, so it is ignored.
  - Hence there are 2 unbanned request in total, 1 of which were canceled.
  - The Cancellation Rate is (1 / 2) = 0.50


Summary :

1. We have two tables: "Trips" and "Users." The "Trips" table contains information about taxi trips, including the trip's id, client id, driver id, city id, status (completed, cancelled by driver, or cancelled by client), and request date. The "Users" table contains information about users, including the user's id, ban status (Yes or No), and role (client, driver, or partner).

2. We need to calculate the cancellation rate for requests made by unbanned users (both the client and driver must not be banned). The cancellation rate is determined by dividing the number of canceled requests by the total number of requests made by unbanned users on each day.

3. The query should retrieve the cancellation rate for each day between "2013-10-01" and "2013-10-03" (inclusive). The cancellation rate should be rounded to two decimal places.

4. To calculate the cancellation rate, we need to consider only the requests made by unbanned users. Requests made by banned users should be ignored.

5. The output should be a result table with two columns: "Day" and "Cancellation Rate." The "Day" column represents the date, and the "Cancellation Rate" column represents the corresponding cancellation rate for that day.

6. The result table can be presented in any order.


Solutions :

1. Using GroupBy

SELECT Request_at AS Day, ROUND(SUM(IF(Status = 'completed', 0, 1))/COUNT(Status), 2) AS 'Cancellation Rate' 
FROM Trips 
WHERE Client_Id NOT IN (SELECT Users_Id FROM Users WHERE Banned = 'Yes') 
    AND Driver_Id NOT IN (SELECT Users_Id FROM Users WHERE Banned = 'Yes')
    AND Request_at BETWEEN '2013-10-01' AND '2013-10-03'
GROUP BY Request_at;

2. Using Nested Case and GroupBy

SELECT request_at as 'Day',
    Round(
        sum(
            CASE 
                WHEN t1.client_id NOT IN (SELECT users_id FROM Users WHERE banned = 'Yes') 
                    AND t1.driver_id NOT IN (select users_id FROM Users WHERE banned = 'Yes')
                    AND t1.status != 'completed'
                THEN 1
                ELSE 0
            END
        )/
        sum(
            CASE 
                WHEN t1.client_id NOT IN (SELECT users_id FROM Users WHERE banned = 'Yes') 
                    AND t1.driver_id NOT IN (SELECT users_id FROM Users WHERE banned = 'Yes')
                THEN 1
                ELSE 0
            END
        ),
        2
    ) as 'Cancellation Rate'
FROM trips t1
WHERE t1.client_id not in (select users_id from Users where banned = 'Yes') 
    and t1.driver_id not in (select users_id from Users where banned = 'Yes')
    and request_at between "2013-10-01" and "2013-10-03"
group by request_at
