586. Customer Placing the Largest Number of Orders (https://leetcode.com/problems/customer-placing-the-largest-number-of-orders/?envType=list&envId=e97a9e5m)

Table: Orders

+-----------------+----------+
| Column Name     | Type     |
+-----------------+----------+
| order_number    | int      |
| customer_number | int      |
+-----------------+----------+
order_number is the primary key for this table.
This table contains information about the order ID and the customer ID.
 

Find the customer_number for the customer who has placed the largest number of orders.

The test cases are generated so that exactly one customer will have placed more orders than any other customer.

The result format is in the following example.

 

Example 1:

Input: 
Orders table:
+--------------+-----------------+
| order_number | customer_number |
+--------------+-----------------+
| 1            | 1               |
| 2            | 2               |
| 3            | 3               |
| 4            | 3               |
+--------------+-----------------+
Output: 
+-----------------+
| customer_number |
+-----------------+
| 3               |
+-----------------+
Explanation: 
The customer with number 3 has two orders, which is greater than either customer 1 or 2 because each of them only has one order. 
So the result is customer_number 3.
 

Follow up: What if more than one customer has the largest number of orders, can you find all the customer_number in this case?


Summary :

Step 1: Understand the table structure

        -> We have a table called "Orders" with two columns: "order_number" and "customer_number".
        -> The "order_number" column is the primary key for this table.
        -> Each row in the table represents an order and contains the order number and the customer number associated with that order.

Step 2: Find the customer with the largest number of orders

        -> We need to determine which customer has placed the largest number of orders.
        -> The test cases are designed so that there will always be exactly one customer with more orders than any other customer.

Step 3: Retrieve the customer number

        -> We are asked to find the "customer_number" for the customer who has placed the largest number of orders.

Step 4: Handle the follow-up scenario

        -> The follow-up question asks what to do if more than one customer has the largest number of orders.
        -> Based on the problem description, we can assume that the test cases are designed so that there will always be exactly one customer with the highest order count.


Solutions :

1. Using Group by and Order by

SELECT customer_number FROM orders
GROUP BY customer_number
ORDER BY count(*) DESC LIMIT 1


2. With Sub query

WITH subquery AS (
    SELECT
        customer_number
        , COUNT(*) counts
    FROM Orders
        GROUP BY customer_number)

SELECT 
    customer_number 
FROM subquery
    ORDER BY counts DESC
LIMIT 1
