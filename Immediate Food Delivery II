1174. Immediate Food Delivery II (https://leetcode.com/problems/immediate-food-delivery-ii/?envType=study-plan-v2&envId=top-sql-50)

Table: Delivery

+-----------------------------+---------+
| Column Name                 | Type    |
+-----------------------------+---------+
| delivery_id                 | int     |
| customer_id                 | int     |
| order_date                  | date    |
| customer_pref_delivery_date | date    |
+-----------------------------+---------+
delivery_id is the primary key of this table.
The table holds information about food delivery to customers that make orders at some date and specify a preferred delivery date (on the same order date or after it).
 

If the customer's preferred delivery date is the same as the order date, then the order is called immediate; otherwise, it is called scheduled.

The first order of a customer is the order with the earliest order date that the customer made. It is guaranteed that a customer has precisely one first order.

Write an SQL query to find the percentage of immediate orders in the first orders of all customers, rounded to 2 decimal places.

The query result format is in the following example.

 

Example 1:

Input: 
Delivery table:
+-------------+-------------+------------+-----------------------------+
| delivery_id | customer_id | order_date | customer_pref_delivery_date |
+-------------+-------------+------------+-----------------------------+
| 1           | 1           | 2019-08-01 | 2019-08-02                  |
| 2           | 2           | 2019-08-02 | 2019-08-02                  |
| 3           | 1           | 2019-08-11 | 2019-08-12                  |
| 4           | 3           | 2019-08-24 | 2019-08-24                  |
| 5           | 3           | 2019-08-21 | 2019-08-22                  |
| 6           | 2           | 2019-08-11 | 2019-08-13                  |
| 7           | 4           | 2019-08-09 | 2019-08-09                  |
+-------------+-------------+------------+-----------------------------+
Output: 
+----------------------+
| immediate_percentage |
+----------------------+
| 50.00                |
+----------------------+
Explanation: 
The customer id 1 has a first order with delivery id 1 and it is scheduled.
The customer id 2 has a first order with delivery id 2 and it is immediate.
The customer id 3 has a first order with delivery id 5 and it is scheduled.
The customer id 4 has a first order with delivery id 7 and it is immediate.
Hence, half the customers have immediate first orders.


Summary :

Step 1: Understand the Table

      We have a table named "Delivery" that contains information about food delivery to customers.
      Each row in the table represents a delivery to a customer who made an order on a specific "order_date" and specified a "customer_pref_delivery_date" (the preferred delivery date).
      The columns are "delivery_id" (the unique identifier for each delivery), "customer_id" (the unique identifier for each customer), "order_date" (the date when the order was made), and "customer_pref_delivery_date" (the date when the customer prefers the delivery to be made).

Step 2: Identify Immediate and Scheduled Orders

      If the customer's preferred delivery date is the same as the order date, then the order is called "immediate."
      Otherwise, it is called "scheduled."

Step 3: Find the First Orders for Each Customer

      For each customer, we need to find their first order, which is the order with the earliest "order_date" that the customer made.
      It is guaranteed that each customer has precisely one first order.

Step 4: Calculate the Percentage of Immediate First Orders

      Calculate the percentage of immediate orders in the first orders of all customers.
      The percentage is calculated as the number of customers with immediate first orders divided by the total number of customers with first orders, multiplied by 100.
      Round the result to two decimal places.


The output will be a single value representing the percentage of immediate orders in the first orders of all customers, rounded to two decimal places.

Note: The term "first order" here refers to the first order made by each customer, not the first order in chronological order from the table.


Solutions :

1. 

SELECT ROUND(SUM(if(order_date=customer_pref_delivery_date,1,0))*100/COUNT(*),2) as immediate_percentage
FROM Delivery
WHERE (customer_id, order_date) in 
(
    SELECT customer_id, MIN(order_date) as first_order FROM Delivery GROUP BY customer_id
)



2. Using Sub Query 

WITH FirstOrders AS (
    SELECT customer_id, MIN(order_date) AS first_order_date
    FROM Delivery
    GROUP BY customer_id
)
SELECT
    ROUND(
        (SUM(IF(order_date = customer_pref_delivery_date, 1, 0)) / COUNT(*)) * 100,
        2
    ) AS immediate_percentage
FROM Delivery
WHERE (customer_id, order_date) IN (SELECT customer_id, first_order_date FROM FirstOrders);
