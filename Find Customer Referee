584. Find Customer Referee (https://leetcode.com/problems/find-customer-referee/?envType=list&envId=e97a9e5m)

Table: Customer

+-------------+---------+
| Column Name | Type    |
+-------------+---------+
| id          | int     |
| name        | varchar |
| referee_id  | int     |
+-------------+---------+
id is the primary key column for this table.
Each row of this table indicates the id of a customer, their name, and the id of the customer who referred them.
 

Write an SQL query to report the names of the customer that are not referred by the customer with id = 2.

Return the result table in any order.

The query result format is in the following example.

 

Example 1:

Input: 
Customer table:
+----+------+------------+
| id | name | referee_id |
+----+------+------------+
| 1  | Will | null       |
| 2  | Jane | null       |
| 3  | Alex | 2          |
| 4  | Bill | null       |
| 5  | Zack | 1          |
| 6  | Mark | 2          |
+----+------+------------+
Output: 
+------+
| name |
+------+
| Will |
| Jane |
| Bill |
| Zack |
+------+


Summary :

1. We have a table called "Customer" that contains information about customers, including their id, name, and the id of the customer who referred them.

2. The task is to write an SQL query that reports the names of customers who are not referred by the customer with id = 2. In other words, we need to find the customers who either have no referee (referee_id is null) or have a different referee than customer id 2.

3. The query should return the result table containing the names of these customers in any order.
For example, given the Customer table:

+----+------+------------+
| id | name | referee_id |
+----+------+------------+
| 1 | Will | null |
| 2 | Jane | null |
| 3 | Alex | 2 |
| 4 | Bill | null |
| 5 | Zack | 1 |
| 6 | Mark | 2 |
+----+------+------------+

We need to find the customers who are not referred by customer id 2. In this case, the customers with names Will, Jane, Bill, and Zack are not referred by customer id 2. Therefore, the expected output would be:

+------+
| name |
+------+
| Will |
| Jane |
| Bill |
| Zack |
+------+

Note that Mark is not included in the output because Mark is referred by customer id 2.


Solutions :

1. Using IS NULL

SELECT name FROM Customer
WHERE referee_id  IS NULL OR referee_id!=2;

2. Using COALESCE

SELECT name
FROM Customer
WHERE COALESCE(referee_id,0) <> 2;
