1068. Product Sales Analysis I (https://leetcode.com/problems/product-sales-analysis-i/?envType=study-plan-v2&envId=top-sql-50)

Table: Sales

+-------------+-------+
| Column Name | Type  |
+-------------+-------+
| sale_id     | int   |
| product_id  | int   |
| year        | int   |
| quantity    | int   |
| price       | int   |
+-------------+-------+
(sale_id, year) is the primary key of this table.
product_id is a foreign key to Product table.
Each row of this table shows a sale on the product product_id in a certain year.
Note that the price is per unit.
 

Table: Product

+--------------+---------+
| Column Name  | Type    |
+--------------+---------+
| product_id   | int     |
| product_name | varchar |
+--------------+---------+
product_id is the primary key of this table.
Each row of this table indicates the product name of each product.
 

Write an SQL query that reports the product_name, year, and price for each sale_id in the Sales table.

Return the resulting table in any order.

The query result format is in the following example.

 

Example 1:

Input: 
Sales table:
+---------+------------+------+----------+-------+
| sale_id | product_id | year | quantity | price |
+---------+------------+------+----------+-------+ 
| 1       | 100        | 2008 | 10       | 5000  |
| 2       | 100        | 2009 | 12       | 5000  |
| 7       | 200        | 2011 | 15       | 9000  |
+---------+------------+------+----------+-------+
Product table:
+------------+--------------+
| product_id | product_name |
+------------+--------------+
| 100        | Nokia        |
| 200        | Apple        |
| 300        | Samsung      |
+------------+--------------+
Output: 
+--------------+-------+-------+
| product_name | year  | price |
+--------------+-------+-------+
| Nokia        | 2008  | 5000  |
| Nokia        | 2009  | 5000  |
| Apple        | 2011  | 9000  |
+--------------+-------+-------+
Explanation: 
From sale_id = 1, we can conclude that Nokia was sold for 5000 in the year 2008.
From sale_id = 2, we can conclude that Nokia was sold for 5000 in the year 2009.
From sale_id = 7, we can conclude that Apple was sold for 9000 in the year 2011.


Summary :

1. We have two tables: "Sales" and "Product".

      a. The "Sales" table contains the following columns: sale_id, product_id, year, quantity, and price.
            i. The combination of sale_id and year is the primary key for this table.
            ii. The product_id column is a foreign key referencing the product_id column in the "Product" table.
            iii. Each row represents a sale of a product with a certain quantity and price in a specific year.

      b. The "Product" table contains the following columns: product_id and product_name.
            i. The product_id column is the primary key for this table.
            ii. The product_name column indicates the name of each product.

2. The goal is to write an SQL query that retrieves the product_name, year, and price for each sale_id in the Sales table.

3. The output should be a result table with the columns: product_name, year, and price.

      a. The product_name column should contain the name of the product corresponding to the product_id in the Sales table.
      b. The year column should indicate the year of each sale.
      c. The price column should indicate the price of each sale.


Solutions :

1. Using Join

SELECT p.product_name, s.year, s.price
FROM Sales s
JOIN Product p ON s.product_id = p.product_id
GROUP BY s.sale_id;

2. Using Left Join

SELECT p.product_name,s.year,s.price 
FROM Sales s
LEFT JOIN Product p
ON p.product_id=s.product_id;

3. Using Inner Join

SELECT product_name, year, price
FROM Product 
INNER JOIN Sales 
USING(product_id)
