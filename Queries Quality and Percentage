1211. Queries Quality and Percentage (https://leetcode.com/problems/queries-quality-and-percentage/?envType=study-plan-v2&envId=top-sql-50)

Table: Queries

+-------------+---------+
| Column Name | Type    |
+-------------+---------+
| query_name  | varchar |
| result      | varchar |
| position    | int     |
| rating      | int     |
+-------------+---------+
There is no primary key for this table, it may have duplicate rows.
This table contains information collected from some queries on a database.
The position column has a value from 1 to 500.
The rating column has a value from 1 to 5. Query with rating less than 3 is a poor query.
 

We define query quality as:

The average of the ratio between query rating and its position.

We also define poor query percentage as:

The percentage of all queries with rating less than 3.

Write an SQL query to find each query_name, the quality and poor_query_percentage.

Both quality and poor_query_percentage should be rounded to 2 decimal places.

Return the result table in any order.

The query result format is in the following example.

 

Example 1:

Input: 
Queries table:
+------------+-------------------+----------+--------+
| query_name | result            | position | rating |
+------------+-------------------+----------+--------+
| Dog        | Golden Retriever  | 1        | 5      |
| Dog        | German Shepherd   | 2        | 5      |
| Dog        | Mule              | 200      | 1      |
| Cat        | Shirazi           | 5        | 2      |
| Cat        | Siamese           | 3        | 3      |
| Cat        | Sphynx            | 7        | 4      |
+------------+-------------------+----------+--------+
Output: 
+------------+---------+-----------------------+
| query_name | quality | poor_query_percentage |
+------------+---------+-----------------------+
| Dog        | 2.50    | 33.33                 |
| Cat        | 0.66    | 33.33                 |
+------------+---------+-----------------------+
Explanation: 
Dog queries quality is ((5 / 1) + (5 / 2) + (1 / 200)) / 3 = 2.50
Dog queries poor_ query_percentage is (1 / 3) * 100 = 33.33

Cat queries quality equals ((2 / 5) + (3 / 3) + (4 / 7)) / 3 = 0.66
Cat queries poor_ query_percentage is (1 / 3) * 100 = 33.33




Summary :

Step 1: Understand the Table

      We have a table named "Queries" that contains information collected from some queries on a database.
      Each row in the table represents a query with columns: "query_name" (the name of the query), "result" (the result of the query), "position" (the position of the query), and "rating" (the rating of the query).

Step 2: Define Query Quality

      Query quality is the average of the ratio between the query rating and its position.
      To calculate the query quality, we add the ratio of each query's rating to its position and then divide by the total number of queries.

Step 3: Define Poor Query Percentage

      The poor query percentage is the percentage of all queries with a rating less than 3.
      To calculate the poor query percentage, we count the number of queries with a rating less than 3 and divide it by the total number of queries, then multiply by 100.

Step 4: Formulate the SQL Query
Write an SQL query to find each query_name, the query quality, and the poor_query_percentage:

      Calculate the query quality by summing the ratio of rating to position for all queries and then dividing by the total number of queries. Round the result to two decimal places.
      Calculate the poor_query_percentage by counting the queries with a rating less than 3, dividing it by the total number of queries, and multiplying by 100. Round the result to two decimal places.
      Return the result table with columns "query_name," "quality," and "poor_query_percentage" in any order.


Soultions :

1. Using CASE

SELECT 
    query_name,
    ROUND(SUM(rating / position) / COUNT(*) , 2) AS quality,
    ROUND(SUM(CASE WHEN rating < 3 THEN 1 ELSE 0 END) / COUNT(*) * 100 , 2) AS poor_query_percentage
FROM 
    queries
GROUP BY 
    query_name;


2. Using AVG 

SELECT 
    query_name, 
    ROUND(AVG(rating / position), 2) AS quality,
    ROUND(SUM(rating<3)/COUNT(query_name)*100,2) AS poor_query_percentage 
FROM 
    queries
GROUP BY 
    query_name;
