1164. Product Price at a Given Date (https://leetcode.com/problems/product-price-at-a-given-date/?envType=study-plan-v2&envId=top-sql-50)

Table: Products

+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| product_id    | int     |
| new_price     | int     |
| change_date   | date    |
+---------------+---------+
(product_id, change_date) is the primary key of this table.
Each row of this table indicates that the price of some product was changed to a new price at some date.
 

Write an SQL query to find the prices of all products on 2019-08-16. Assume the price of all products before any change is 10.

Return the result table in any order.

The query result format is in the following example.

 

Example 1:

Input: 
Products table:
+------------+-----------+-------------+
| product_id | new_price | change_date |
+------------+-----------+-------------+
| 1          | 20        | 2019-08-14  |
| 2          | 50        | 2019-08-14  |
| 1          | 30        | 2019-08-15  |
| 1          | 35        | 2019-08-16  |
| 2          | 65        | 2019-08-17  |
| 3          | 20        | 2019-08-18  |
+------------+-----------+-------------+
Output: 
+------------+-------+
| product_id | price |
+------------+-------+
| 2          | 50    |
| 1          | 35    |
| 3          | 10    |
+------------+-------+


Summary :

1. Table Overview: You are given a table named "Products" that contains information about different products and their price changes. The table has the following columns:

      product_id (integer): The ID of the product.
      new_price (integer): The new price of the product after a change.
      change_date (date): The date on which the price change occurred.

2. Objective: The task is to write an SQL query to find the prices of all products on a specific date, which is 2019-08-16. The table contains records for price changes on different dates, but we need to find the price of each product on the specified date.

3. Finding Product Prices: To achieve this, you need to identify the price of each product on the given date (2019-08-16). If a product's price was changed on or before 2019-08-16, then the price on that date should be considered. If a product's price was never changed before that date, the initial price is assumed to be 10.

4. Output Format: The output should be a result table with two columns:

      product_id (integer): The ID of the product.
      price (integer): The price of the product on 2019-08-16.


Solutions :

1. Using Union All

SELECT product_id, 10 AS price
FROM Products
GROUP BY product_id
HAVING MIN(change_date) > '2019-08-16'
UNION ALL
SELECT P.product_id, P.new_price as price
FROM Products P INNER JOIN 
(
  SELECT product_id, MAX(change_date) as max_date
  FROM Products
  WHERE change_date <= '2019-08-16'
  GROUP BY product_id
) as R 
ON P.product_id = R.product_id AND P.change_date = R.max_date;


2. Using dervied Left join

SELECT
    DISTINCT t.product_id,
    COALESCE(p.price, 10) AS price
FROM
    (SELECT DISTINCT product_id FROM products) t
    LEFT JOIN 
    (SELECT 
        product_id,
        FIRST_VALUE(new_price) OVER(PARTITION by product_id ORDER BY change_date DESC) AS price
    FROM products
    WHERE change_date <= '2019-08-16') p 
    using (product_id);
