602. Friend Requests II: Who Has the Most Friends (https://leetcode.com/problems/friend-requests-ii-who-has-the-most-friends/?envType=study-plan-v2&envId=top-sql-50)

Table: RequestAccepted

+----------------+---------+
| Column Name    | Type    |
+----------------+---------+
| requester_id   | int     |
| accepter_id    | int     |
| accept_date    | date    |
+----------------+---------+
(requester_id, accepter_id) is the primary key for this table.
This table contains the ID of the user who sent the request, the ID of the user who received the request, and the date when the request was accepted.
 

Write an SQL query to find the people who have the most friends and the most friends number.

The test cases are generated so that only one person has the most friends.

The query result format is in the following example.

 

Example 1:

Input: 
RequestAccepted table:
+--------------+-------------+-------------+
| requester_id | accepter_id | accept_date |
+--------------+-------------+-------------+
| 1            | 2           | 2016/06/03  |
| 1            | 3           | 2016/06/08  |
| 2            | 3           | 2016/06/08  |
| 3            | 4           | 2016/06/09  |
+--------------+-------------+-------------+
Output: 
+----+-----+
| id | num |
+----+-----+
| 3  | 3   |
+----+-----+
Explanation: 
The person with id 3 is a friend of people 1, 2, and 4, so he has three friends in total, which is the most number than any others.


Summary :

1. Table Overview: You are given a table called "RequestAccepted" with three columns:

      requester_id (integer): The ID of the user who sent the friend request.
      accepter_id (integer): The ID of the user who received and accepted the friend request.
      accept_date (date): The date when the friend request was accepted.

2. Objective: The task is to write an SQL query to find the person who has the most friends and the total number of friends they have. Only one person in the table has the most friends, and the query should identify that person and their friend count.

3. Finding the Most Friends: You need to determine which person has the most friends, i.e., the person with the highest number of friend connections. To do this, you should count the number of times each person's ID appears in either the requester_id or accepter_id column. The total count for each person will represent the number of friends they have.

4. Output Format: The output should be a result table containing two columns:

      id (integer): The ID of the person who has the most friends.
      num (integer): The total number of friends that person has.


Solutions :

1. 

WITH cte as(SELECT requester_id id 
                FROM RequestAccepted
                UNION ALL
                SELECT accepter_id id 
                FROM RequestAccepted)

SELECT id, count(*) num  
FROM cte 
GROUP BY 1 
ORDER BY 2 DESC limit 1


2. 

SELECT id,COUNT(*) AS num
FROM
(
SELECT requester_id AS id
FROM RequestAccepted 

UNION ALL

SELECT accepter_id AS id
FROM  RequestAccepted
) AS a
GROUP BY id
ORDER BY num DESC
LIMIT 1;
