1517. Find Users With Valid E-Mails (https://leetcode.com/problems/find-users-with-valid-e-mails/?envType=study-plan-v2&envId=top-sql-50)

Table: Users

+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| user_id       | int     |
| name          | varchar |
| mail          | varchar |
+---------------+---------+
In SQL, user_id is the primary key for this table.
This table contains information of the users signed up in a website. Some e-mails are invalid.
 

Find the users who have valid emails.

A valid e-mail has a prefix name and a domain where:

The prefix name is a string that may contain letters (upper or lower case), digits, underscore '_', period '.', and/or dash '-'. The prefix name must start with a letter.
The domain is '@leetcode.com'.
Return the result table in any order.

The result format is in the following example.

 

Example 1:

Input: 
Users table:
+---------+-----------+-------------------------+
| user_id | name      | mail                    |
+---------+-----------+-------------------------+
| 1       | Winston   | winston@leetcode.com    |
| 2       | Jonathan  | jonathanisgreat         |
| 3       | Annabelle | bella-@leetcode.com     |
| 4       | Sally     | sally.come@leetcode.com |
| 5       | Marwan    | quarz#2020@leetcode.com |
| 6       | David     | david69@gmail.com       |
| 7       | Shapiro   | .shapo@leetcode.com     |
+---------+-----------+-------------------------+
Output: 
+---------+-----------+-------------------------+
| user_id | name      | mail                    |
+---------+-----------+-------------------------+
| 1       | Winston   | winston@leetcode.com    |
| 3       | Annabelle | bella-@leetcode.com     |
| 4       | Sally     | sally.come@leetcode.com |
+---------+-----------+-------------------------+
Explanation: 
The mail of user 2 does not have a domain.
The mail of user 5 has the # sign which is not allowed.
The mail of user 6 does not have the leetcode domain.
The mail of user 7 starts with a period.


Summary :


Step 1: Understand the Table

      We have a table named "Users" that contains information about users signed up on a website.
      Each row in the table represents a user with columns: "user_id" (the unique identifier for each user), "name" (the name of the user), and "mail" (the email address of the user).

Step 2: Define Valid Emails

      A valid email must have a prefix name and a domain.
      The prefix name can contain letters (upper or lower case), digits, underscore '_', period '.', and/or dash '-'. It must start with a letter.
      The domain must be '@leetcode.com'.

Step 3: Find Users with Valid Emails

      We need to find the users who have valid email addresses according to the rules defined above.

Step 4: Formulate the SQL Query
Write an SQL query to find the users who have valid email addresses:

      Use the LIKE operator with a regular expression to check if the email address matches the required pattern.
      Use the SUBSTRING function to extract the prefix name from the "mail" column.
      Use the RIGHT function to extract the domain from the "mail" column.
      Use the WHERE clause to filter the rows where the email address is valid.

Solutions :

1. Using RegEx

SELECT user_id, name, mail
FROM Users
WHERE mail REGEXP '^[A-Za-z][A-Za-z0-9_.-]*@leetcode.com$'
AND mail NOT LIKE '%?%';
