1978. Employees Whose Manager Left the Company (https://leetcode.com/problems/employees-whose-manager-left-the-company/?envType=study-plan-v2&envId=top-sql-50)


Table: Employees

+-------------+----------+
| Column Name | Type     |
+-------------+----------+
| employee_id | int      |
| name        | varchar  |
| manager_id  | int      |
| salary      | int      |
+-------------+----------+
employee_id is the primary key for this table.
This table contains information about the employees, their salary, and the ID of their manager. Some employees do not have a manager (manager_id is null). 
 

Write an SQL query to report the IDs of the employees whose salary is strictly less than $30000 and whose manager left the company. When a manager leaves the company, their information is deleted from the Employees table, but the reports still have their manager_id set to the manager that left.

Return the result table ordered by employee_id.

The query result format is in the following example.

 

Example 1:

Input:  
Employees table:
+-------------+-----------+------------+--------+
| employee_id | name      | manager_id | salary |
+-------------+-----------+------------+--------+
| 3           | Mila      | 9          | 60301  |
| 12          | Antonella | null       | 31000  |
| 13          | Emery     | null       | 67084  |
| 1           | Kalel     | 11         | 21241  |
| 9           | Mikaela   | null       | 50937  |
| 11          | Joziah    | 6          | 28485  |
+-------------+-----------+------------+--------+
Output: 
+-------------+
| employee_id |
+-------------+
| 11          |
+-------------+

Explanation: 
The employees with a salary less than $30000 are 1 (Kalel) and 11 (Joziah).
Kalel's manager is employee 11, who is still in the company (Joziah).
Joziah's manager is employee 6, who left the company because there is no row for employee 6 as it was deleted.



Summary :

1. Given Table: You have a table called "Employees" with four columns:

      employee_id (integer): Primary key representing the unique ID of each employee.
      name (varchar): The name of the employee.
      manager_id (integer): The ID of the manager for each employee. Some employees may not have a manager, and in that case, the manager_id will be null.
      salary (integer): The salary of each employee.


2. Objective: Your task is to write an SQL query to find the employee_id of employees who meet two conditions:

      Their salary is strictly less than $30,000.
      Their manager has left the company (the manager's information is deleted from the table, but their manager_id is still present in the employees' rows).

3. Conditions to Check:

      Salary Condition: Check if the salary of the employee is less than $30,000.
      Manager Left Condition: Check if the manager_id of the employee points to a non-existent row (i.e., the manager has left the company, and their information is deleted).

4. Output: Return a result table containing the employee_id of employees who satisfy both conditions, sorted in ascending order of employee_id.


Solutions :

1.

# Write your MySQL query statement below
SELECT employee_id
FROM Employees
WHERE salary < 30000 
AND manager_id NOT IN (
    SELECT DISTINCT(employee_id) FROM Employees
)
ORDER BY employee_id;


2.

SELECT e1.employee_id 
FROM Employees e1
WHERE e1.salary<30000 AND
    NOT EXISTS(SELECT e2.employee_id 
                FROM employees e2 
                WHERE e2.employee_id = e1.manager_id)
                AND manager_id IS NOT NULL
ORDER BY employee_id
