197. Rising Temperature (https://leetcode.com/problems/rising-temperature/?envType=list&envId=e97a9e5m)

Table: Weather

+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| id            | int     |
| recordDate    | date    |
| temperature   | int     |
+---------------+---------+
id is the primary key for this table.
This table contains information about the temperature on a certain day.
 

Write an SQL query to find all dates' Id with higher temperatures compared to its previous dates (yesterday).

Return the result table in any order.

The query result format is in the following example.

 

Example 1:

Input: 
Weather table:
+----+------------+-------------+
| id | recordDate | temperature |
+----+------------+-------------+
| 1  | 2015-01-01 | 10          |
| 2  | 2015-01-02 | 25          |
| 3  | 2015-01-03 | 20          |
| 4  | 2015-01-04 | 30          |
+----+------------+-------------+
Output: 
+----+
| id |
+----+
| 2  |
| 4  |
+----+
Explanation: 
In 2015-01-02, the temperature was higher than the previous day (10 -> 25).
In 2015-01-04, the temperature was higher than the previous day (20 -> 30).


Summary :

1. We have a table called "Weather" with three columns: "id", "recordDate", and "temperature." The "id" column is the primary key, and each row in the table represents the temperature recorded on a specific date.

2. The goal is to find the "id" values for dates where the temperature was higher than the previous day. In other words, we need to identify the rows in which the temperature increased compared to the temperature recorded on the previous day.

3. We are instructed to write an SQL query to retrieve this information. The query should return the "id" values of the rows that meet the condition, indicating the dates where the temperature was higher than the previous day.

4. The result table can be presented in any order. It should include only the "id" values that correspond to the dates where the temperature increased compared to the previous day.


Solutions :

1. Using Datediff

SELECT w1.id
FROM weather w1 , weather w2
WHERE w1.temperature > w2.temperature AND
 DATEDIFF(w1.recordDate , w2.recordDate) = 1

2. Using Join (Most Efficient) 

SELECT w1.id
FROM Weather w1
JOIN Weather w2 ON w1.recordDate = DATE_ADD(w2.recordDate, INTERVAL 1 DAY)
WHERE w1.temperature > w2.temperature
