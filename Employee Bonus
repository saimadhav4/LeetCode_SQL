577. Employee Bonus (https://leetcode.com/problems/employee-bonus/?envType=study-plan-v2&envId=top-sql-50)

Table: Employee

+-------------+---------+
| Column Name | Type    |
+-------------+---------+
| empId       | int     |
| name        | varchar |
| supervisor  | int     |
| salary      | int     |
+-------------+---------+
empId is the primary key column for this table.
Each row of this table indicates the name and the ID of an employee in addition to their salary and the id of their manager.
 

Table: Bonus

+-------------+------+
| Column Name | Type |
+-------------+------+
| empId       | int  |
| bonus       | int  |
+-------------+------+
empId is the primary key column for this table.
empId is a foreign key to empId from the Employee table.
Each row of this table contains the id of an employee and their respective bonus.
 

Write an SQL query to report the name and bonus amount of each employee with a bonus less than 1000.

Return the result table in any order.

The query result format is in the following example.

 

Example 1:

Input: 
Employee table:
+-------+--------+------------+--------+
| empId | name   | supervisor | salary |
+-------+--------+------------+--------+
| 3     | Brad   | null       | 4000   |
| 1     | John   | 3          | 1000   |
| 2     | Dan    | 3          | 2000   |
| 4     | Thomas | 3          | 4000   |
+-------+--------+------------+--------+
Bonus table:
+-------+-------+
| empId | bonus |
+-------+-------+
| 2     | 500   |
| 4     | 2000  |
+-------+-------+
Output: 
+------+-------+
| name | bonus |
+------+-------+
| Brad | null  |
| John | null  |
| Dan  | 500   |
+------+-------+


Summary :

1. We have two tables: Employee and Bonus.

      a. The Employee table contains information about employees, including their ID (empId), name, supervisor's ID (supervisor), and salary.
      b. The Bonus table contains bonus information for employees, including their ID (empId) and bonus amount.

2. The goal is to write an SQL query to report the name and bonus amount of each employee with a bonus less than 1000.

3. The output should be a result table with the columns name and bonus.

      a. The name column represents the name of each employee.
      b. The bonus column represents the bonus amount for each employee.


Solutions :

1. 

SELECT e.name, b.bonus
FROM Employee e 
LEFT JOIN Bonus b
ON e.empId=b.empId
WHERE b.bonus<1000
OR b.bonus IS NULL;

2. Using SUM

SELECT e.name, b.bonus
FROM Employee e
LEFT JOIN (SELECT empId, SUM(bonus) as bonus 
    FROM Bonus
    GROUP BY empId
) b ON e.empId = b.empId
WHERE b.bonus IS NULL OR b.bonus < 1000;
