1070. Product Sales Analysis III (https://leetcode.com/problems/product-sales-analysis-iii/?envType=study-plan-v2&envId=top-sql-50)

Table: Sales

+-------------+-------+
| Column Name | Type  |
+-------------+-------+
| sale_id     | int   |
| product_id  | int   |
| year        | int   |
| quantity    | int   |
| price       | int   |
+-------------+-------+
(sale_id, year) is the primary key of this table.
product_id is a foreign key to Product table.
Each row of this table shows a sale on the product product_id in a certain year.
Note that the price is per unit.
 

Table: Product

+--------------+---------+
| Column Name  | Type    |
+--------------+---------+
| product_id   | int     |
| product_name | varchar |
+--------------+---------+
product_id is the primary key of this table.
Each row of this table indicates the product name of each product.
 

Write an SQL query that selects the product id, year, quantity, and price for the first year of every product sold.

Return the resulting table in any order.

The query result format is in the following example.

 

Example 1:

Input: 
Sales table:
+---------+------------+------+----------+-------+
| sale_id | product_id | year | quantity | price |
+---------+------------+------+----------+-------+ 
| 1       | 100        | 2008 | 10       | 5000  |
| 2       | 100        | 2009 | 12       | 5000  |
| 7       | 200        | 2011 | 15       | 9000  |
+---------+------------+------+----------+-------+
Product table:
+------------+--------------+
| product_id | product_name |
+------------+--------------+
| 100        | Nokia        |
| 200        | Apple        |
| 300        | Samsung      |
+------------+--------------+
Output: 
+------------+------------+----------+-------+
| product_id | first_year | quantity | price |
+------------+------------+----------+-------+ 
| 100        | 2008       | 10       | 5000  |
| 200        | 2011       | 15       | 9000  |
+------------+------------+----------+-------+


Summary :

1. Tables Overview: You are given two tables: "Sales" and "Product."

      "Sales" table has five columns:
              sale_id (integer): The ID of the sale (primary key).
              product_id (integer): The ID of the product sold (foreign key to the "Product" table).
              year (integer): The year in which the sale occurred.
              quantity (integer): The quantity of the product sold in that sale.
              price (integer): The price per unit of the product sold.
      "Product" table has two columns:
            product_id (integer): The ID of the product (primary key).
            product_name (varchar): The name of the product.

2. Objective: The task is to write an SQL query that selects the product_id, year, quantity, and price for the first year of every product sold. In other words, you need to find the details of the earliest sale for each product.

3. Finding Earliest Sales: To achieve this, you should find the minimum (earliest) year for each product_id in the "Sales" table. For each product_id with its corresponding earliest year, you need to retrieve the quantity and price from that specific sale.

4. Output Format: The output should be a result table with four columns:

      product_id (integer): The ID of the product.
      first_year (integer): The earliest year in which the product was sold.
      quantity (integer): The quantity of the product sold in the earliest sale.
      price (integer): The price per unit of the product in the earliest sale.


Solutions :

1. Using SubQuery

WITH CTE AS
(
    SELECT 
        product_id,
        MIN(year) AS first_year
    FROM Sales
    GROUP BY 1
)
SELECT 
    product_id,
    year AS first_year,
    quantity,
    price
FROM Sales 
WHERE (product_id, year) in (select * from CTE)


2. Straight forward

SELECT product_id, year AS first_year, quantity, price 
FROM Sales
WHERE (product_id, year) 
IN (SELECT product_id, MIN(year) 
FROM Sales
GROUP BY 1);
