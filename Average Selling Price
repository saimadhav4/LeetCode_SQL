1251. Average Selling Price (https://leetcode.com/problems/average-selling-price/?envType=study-plan-v2&envId=top-sql-50)

SQL Schema
Table: Prices

+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| product_id    | int     |
| start_date    | date    |
| end_date      | date    |
| price         | int     |
+---------------+---------+
(product_id, start_date, end_date) is the primary key for this table.
Each row of this table indicates the price of the product_id in the period from start_date to end_date.
For each product_id there will be no two overlapping periods. That means there will be no two intersecting periods for the same product_id.
 

Table: UnitsSold

+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| product_id    | int     |
| purchase_date | date    |
| units         | int     |
+---------------+---------+
There is no primary key for this table, it may contain duplicates.
Each row of this table indicates the date, units, and product_id of each product sold. 
 

Write an SQL query to find the average selling price for each product. average_price should be rounded to 2 decimal places.

Return the result table in any order.

The query result format is in the following example.

 

Example 1:

Input: 
Prices table:
+------------+------------+------------+--------+
| product_id | start_date | end_date   | price  |
+------------+------------+------------+--------+
| 1          | 2019-02-17 | 2019-02-28 | 5      |
| 1          | 2019-03-01 | 2019-03-22 | 20     |
| 2          | 2019-02-01 | 2019-02-20 | 15     |
| 2          | 2019-02-21 | 2019-03-31 | 30     |
+------------+------------+------------+--------+
UnitsSold table:
+------------+---------------+-------+
| product_id | purchase_date | units |
+------------+---------------+-------+
| 1          | 2019-02-25    | 100   |
| 1          | 2019-03-01    | 15    |
| 2          | 2019-02-10    | 200   |
| 2          | 2019-03-22    | 30    |
+------------+---------------+-------+
Output: 
+------------+---------------+
| product_id | average_price |
+------------+---------------+
| 1          | 6.96          |
| 2          | 16.96         |
+------------+---------------+
Explanation: 
Average selling price = Total Price of Product / Number of products sold.
Average selling price for product 1 = ((100 * 5) + (15 * 20)) / 115 = 6.96
Average selling price for product 2 = ((200 * 15) + (30 * 30)) / 230 = 16.96



Summary :

Step 1: Understand the Tables

      We have two tables: "Prices" and "UnitsSold."
      "Prices" table contains information about the price of products over different time periods, with columns "product_id," "start_date," "end_date," and "price."
      "UnitsSold" table contains information about the units of products sold on different dates, with columns "product_id," "purchase_date," and "units."

Step 2: Define the Average Selling Price

      The average selling price for a product is calculated as the total price of the product sold divided by the number of products sold.

Step 3: Calculate the Average Selling Price
To find the average selling price for each product:

      We need to match the "product_id" in both tables to get the relevant information.
      For each product, calculate the total price of products sold by multiplying the price of each unit with the number of units sold on that date.
      Calculate the total number of products sold for each product by summing up the "units" sold on different dates for that product.
      Divide the total price by the total number of products sold to get the average selling price.
      Round the average selling price to two decimal places.

Step 4: Formulate the SQL Query
Write an SQL query to find the average selling price for each product:

      Join the "Prices" and "UnitsSold" tables based on the "product_id" column.
      Group the results by "product_id."
      Use aggregate functions like SUM and COUNT to calculate the total price and total number of products sold for each product.
      Calculate the average selling price for each product using the above values.
      Round the average selling price to two decimal places.
      Select the "product_id" and "average_price" columns in the final result.


Solutions :

1. 

SELECT
    us.product_id,
    ROUND(SUM(p.price * us.units) / SUM(us.units), 2) AS average_price
FROM
    UnitsSold us
JOIN
    Prices p ON us.product_id = p.product_id AND us.purchase_date BETWEEN p.start_date AND p.end_date
GROUP BY
    us.product_id;
